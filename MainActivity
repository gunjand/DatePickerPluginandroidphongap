import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import org.apache.cordova.DroidGap;
import org.apache.cordova.api.CallbackContext;

import android.os.Bundle;
import android.app.Activity;
import android.app.DatePickerDialog;
import android.app.Dialog;
import android.app.TimePickerDialog;
import android.view.Menu;
import android.widget.DatePicker;
import android.widget.TimePicker;

public class MainActivity extends DroidGap {
       
	     int DIALOG_ID;
		CallbackContext mCallbackContext;
	        // variables to save user selected date and time
	    public  int year,month,day,hour,minute;  
	        // declare  the variables to Show/Set the date and time when Time and  Date Picker Dialog first appears
	    private int mYear, mMonth, mDay,mHour,mMinute; 
	    
	    // constructor
	    
	    public MainActivity()
	    {
	                // Assign current Date and Time Values to Variables
	                final Calendar c = Calendar.getInstance();
	                mYear = c.get(Calendar.YEAR);
	                mMonth = c.get(Calendar.MONTH);
	                mDay = c.get(Calendar.DAY_OF_MONTH);
	                mHour = c.get(Calendar.HOUR_OF_DAY);
	                mMinute = c.get(Calendar.MINUTE);
	    }
	@Override
	    public void onCreate(Bundle savedInstanceState)
	    {
	        super.onCreate(savedInstanceState);
	        super.setIntegerProperty("loadUrlTimeoutValue", 70000);
	        //Typeface font = Typeface.createFromAsset(getAssets(), "hindifont.ttf");
	        //super.loadUrl("file:///android_asset/mobile_website/index.html");
	        super.loadUrl("file:///android_asset/www/index.html");
	        
	      
	    }
	  
	  @Override
	protected Dialog onCreateDialog(int id) {
			if(DIALOG_ID == 0){
				 return new DatePickerDialog(getActivity(),mDateSetListener, mYear, mMonth, mDay);
			}else{
				 return new TimePickerDialog(getActivity(),mTimeSetListener, mHour, mMinute, true);
			}
          
	}
	  

	    // Register  DatePickerDialog listener
	     private DatePickerDialog.OnDateSetListener mDateSetListener =
	                            new DatePickerDialog.OnDateSetListener() {
	                        // the callback received when the user "sets" the Date in the DatePickerDialog
	                                public void onDateSet(DatePicker view, int yearSelected,
	                                                      int monthOfYear, int dayOfMonth) {
	                                 
	                                   // Set the Selected Date in Select date Button
	                                   Calendar c = Calendar.getInstance();
	                                   c.set(yearSelected, monthOfYear, dayOfMonth);

	                                   SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
	                                   String formattedDate = sdf.format(c.getTime());
	                                  
	                                   // Set the Selected Date in Select date Button
	                                  
	                                    mCallbackContext.success(formattedDate);
	                                }
	                            };

	       // Register  TimePickerDialog listener                 
	                            private TimePickerDialog.OnTimeSetListener mTimeSetListener =
	                                new TimePickerDialog.OnTimeSetListener() {
	                         // the callback received when the user "sets" the TimePickerDialog in the dialog
	                                    public void onTimeSet(TimePicker view, int hourOfDay, int min) {
	                                    	 // Set the Selected Date in Select date Button
	                                        Date date = new Date();
	                                   
	                                        String strDateFormat = hourOfDay+":"+min;
	                                     
	                                        SimpleDateFormat sdf = new SimpleDateFormat(strDateFormat);
	                                        String formattedTime = sdf.format(date);
	                                        
	                                        // Set the Selected Date in Select date Button
	                                       
	                                         mCallbackContext.success(formattedTime);
	                                       
	                                      }
	                                };

								public void callActivityMethod(int dialogType, CallbackContext callbackContext) {
									// TODO Auto-generated method stub
									showDialog(dialogType);
									mCallbackContext = callbackContext;
									
								} 
}
